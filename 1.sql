
/*
NO USAR SYS Y SYSTEM PARA CREAR ESQUEMAS, TABLAS, ETC., SON USUARIOS ADMINISTRADORES...

PARA CREAR ESQUEMAS Y OTROS, PRIMERO CREAR UN USUARIO, DARLE PERMISOS Y CONECTARSE A LA 
BASE DE DATOS CON ESE NUEVO USUARIO

*/

--GUARDAR ARCHIVO EN ... C:\SQL\1.sql

--PARA EJECUTAR
--@C:\SQL\1.sql;

--CONEXION AL SISTEMA PARA CREAR USUARIO
connect system/admin;
--ERROR AL COMENTAR AL LADO DE: CONN USUARIO/PASSWORD... MEJOR NO COLOCAR

--SI EXISTE USUARIO, LO ELIMINO DE TODOS MODOS
DROP USER alfa CASCADE;

--CREACION DE USUARIO
CREATE USER alfa IDENTIFIED BY admin DEFAULT TABLESPACE users TEMPORARY TABLESPACE temp QUOTA UNLIMITED ON users;

--CREAR ROL
DROP ROLE DESARROLLO;
CREATE ROLE DESARROLLO;

--CONCEDER PERMISOS AL ROL
GRANT CREATE SESSION, 
CREATE TABLE, 
CREATE SEQUENCE,
CREATE ANY INDEX,
CREATE VIEW, 
CREATE TRIGGER TO DESARROLLO; 

--ASIGNAR PERMISOS AL USUARIO
-- GRANT CREATE SESSION, CREATE TABLE TO alfa; --PERMISO MUY LIMITADO

GRANT DESARROLLO TO alfa;

--DESCONECTAR USUARIO SYSTEM
disconnect system;

clear screen;
----------------------------------------------

--CONECTAR USUARIO
CONN alfa/admin;
--ERROR AL COMENTAR AL LADO DE CONN USUARIO/PASSWORD
--AL CREAR LAS TABLAS... COMENZAR POR LA TABLA QUE NO TENGA CLAVE FORANEA

CREATE TABLE REGIONES (
	ID_REGION NUMBER NOT NULL,
	NOMBRE VARCHAR2(25), 
	CONSTRAINT REG_ID_PK PRIMARY KEY (ID_REGION),
	CONSTRAINT UNIQUE_NOMBRE_REGION UNIQUE(NOMBRE)
	-- NO DEJAR AQUI UNA LINEA EN BLANCO....
);
/*****************************************************************/
 /* OJO.... AL DEFINIR LA ULTIMA COLUMNA Y SU TIPO DE DATO, UNA CLAVE PRIMARIA O FORANEA
  NO DEJAR UNA LINEA EN BLANCO, LANZA ERROR*/
/****************************************************************/


CREATE TABLE PAISES(
	ID_PAIS CHAR(2),
	NOMBRE VARCHAR2(40),
	ID_REGION NUMBER,
	CONSTRAINT UNIQUE_NOMBRE_PAIS UNIQUE(NOMBRE),
	CONSTRAINT ID_PAIS_PK PRIMARY KEY (ID_PAIS),
	CONSTRAINT PAIS_REG_FK FOREIGN KEY (ID_REGION) REFERENCES REGIONES (ID_REGION)
);




CREATE TABLE UBICACIONES(
	ID_UBICACION NUMBER(4) NOT NULL,
	CALLE VARCHAR2(40),
	CODIGO_POSTAL VARCHAR2(12),
	CIUDAD VARCHAR2(30) NOT NULL,
	PROVINCIA VARCHAR2(25),
	ID_PAIS CHAR(2),
	CONSTRAINT ID_UBICACION_PK PRIMARY KEY (ID_UBICACION),
	CONSTRAINT UBICACION_PAIS_FK FOREIGN KEY (ID_PAIS) REFERENCES PAISES(ID_PAIS)
);



CREATE TABLE TRABAJOS(
	ID_TRABAJO VARCHAR2(10) NOT NULL,
	TITULO VARCHAR2(35) NOT NULL,
	SALARIO_MIN NUMBER(10,2),
	SALARIO_MAX NUMBER(10,2),
	CONSTRAINT UNIQUE_TITULO_TRABAJO UNIQUE(TITULO),
	CONSTRAINT CHECK_MIN_SALARIO CHECK(SALARIO_MIN>0),
	CONSTRAINT CHECK_SALARIOS CHECK(SALARIO_MIN<SALARIO_MAX),
	CONSTRAINT ID_TRABAJO_PK PRIMARY KEY (ID_TRABAJO)
);



CREATE TABLE DEPARTAMENTOS(
	ID_DEPARTAMENTO NUMBER(4) NOT NULL,
	NOMBRE_DEPARTAMENTO VARCHAR2(30) NOT NULL,
	ID_MANAGER NUMBER(6),
	ID_UBICACION NUMBER(4),
	CONSTRAINT UNIQUE_NOMBRE_DEPARTAMENTO UNIQUE(NOMBRE_DEPARTAMENTO),
	CONSTRAINT ID_DEPARTAMENTO_PK PRIMARY KEY (ID_DEPARTAMENTO),
	CONSTRAINT ID_UBICACION_FK FOREIGN KEY (ID_UBICACION) REFERENCES UBICACIONES(ID_UBICACION)
	-- CONSTRAINT ID_MANAGER_FK FOREIGN KEY (ID_MANAGER) REFERENCES EMPLEADOS(ID_EMPLEADO)	
	-- no se puede agregar clave foranea de manager xq la tabla empleado aun no existe
);


CREATE TABLE EMPLEADOS(
	ID_EMPLEADO NUMBER(6) NOT NULL,
	NOMBRE VARCHAR2(20) NOT NULL,
	APELLIDO VARCHAR2(25) NOT NULL,
	EMAIL VARCHAR2(25) NOT NULL,
	TELEFONO VARCHAR2(20),
	FECHA_CONTRATACION DATE NOT NULL,
	ID_TRABAJO VARCHAR2(10) NOT NULL,
	SALARIO NUMBER(10,2),
	COMISION NUMBER(10,2),
	ID_DEPARTAMENTO NUMBER(4),
	ID_MANAGER NUMBER(6),
	CONSTRAINT CHECK_SALARIO CHECK (SALARIO>0),
	CONSTRAINT UNIQUE_EMAIL UNIQUE (EMAIL),
	CONSTRAINT ID_EMPLEADO_PK PRIMARY KEY (ID_EMPLEADO),
	CONSTRAINT EMPLEADO_ID_TRABAJO_FK FOREIGN KEY  (ID_TRABAJO) REFERENCES TRABAJOS(ID_TRABAJO),
	CONSTRAINT EMPLEADO_ID_DEPARTAMENTO_FK FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO),
	CONSTRAINT EMPLEADO_ID_MANAGER_FK FOREIGN KEY (ID_MANAGER) REFERENCES EMPLEADOS(ID_EMPLEADO) --NO ES REDUNDANTE SI YA SE TIENE DEPARTAMENTO???
);


/* CUIDADO... ERROR AL TENER MISMOS NOMBRES DE CLAVES FORANEAS EN DISTINTAS TABLAS
COLOCAR PRIMERO NOMBRE DE LA TABLA Y LUEGO AGREGAR EL NOMBRE DE LA CLAVE FORANEA ---> NombreTabla_NombreFK 

SE PUEDE TAMBIEN COLOCAR SOLO FOREIGN KEY (NOMBRE_ID) REFERENCES NOMBRE_TABLA(NOMBRE_ID_EN_TABLA_REFERENCIADA)  

*/
-- AGREGAR CLAVE FORANEA DE MANAGER A LA TABLA DEPARTAMENTOS
ALTER TABLE DEPARTAMENTOS ADD CONSTRAINT ID_MANAGER_FK FOREIGN KEY(ID_MANAGER) REFERENCES EMPLEADOS(ID_EMPLEADO);	

-- tiene dos claves primarias...
CREATE TABLE HISTORIAL_TRABAJOS(
	ID_HISTORIAL NUMBER(6) NOT NULL,
	ID_EMPLEADO NUMBER(6) NOT NULL,
	FECHA_INICIO DATE NOT NULL,
	FECHA_FIN DATE NOT NULL,
	ID_TRABAJO VARCHAR2(10) NOT NULL,
	ID_DEPARTAMENTO NUMBER(4),
	CONSTRAINT CHECK_FECHA CHECK(FECHA_FIN>=FECHA_INICIO),
	CONSTRAINT HIST_TRABAJO_EMPLEADO_PK PRIMARY KEY(ID_HISTORIAL,ID_EMPLEADO,FECHA_INICIO),
	CONSTRAINT HISTORIAL_ID_TRABAJO_FK FOREIGN KEY (ID_TRABAJO) REFERENCES TRABAJOS(ID_TRABAJO),
	CONSTRAINT HISTORIAL_ID_DEPARTAMENTO_FK FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO),
	CONSTRAINT ID_EMPLEADO_FK FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADOS(ID_EMPLEADO)
);

--SECUENCIA DE HISTORIAL DE TRABAJO
CREATE SEQUENCE SEQ_ID_HISTORIAL START WITH 1 INCREMENT BY 1;


CREATE SEQUENCE SEQ_ID_REGION START WITH 1 INCREMENT BY 1 MAXVALUE 6 MINVALUE 1;

--INSERCION EN REGIONES
INSERT INTO REGIONES ( ID_REGION, NOMBRE ) VALUES (SEQ_ID_REGION.NEXTVAL, 'America');
INSERT INTO REGIONES ( ID_REGION, NOMBRE ) VALUES (SEQ_ID_REGION.NEXTVAL, 'Europa');
INSERT INTO REGIONES ( ID_REGION, NOMBRE ) VALUES (SEQ_ID_REGION.NEXTVAL, 'Asia');
INSERT INTO REGIONES ( ID_REGION, NOMBRE ) VALUES (SEQ_ID_REGION.NEXTVAL, 'Africa');
INSERT INTO REGIONES ( ID_REGION, NOMBRE ) VALUES (SEQ_ID_REGION.NEXTVAL, 'Oceania');


CREATE SEQUENCE SEQ_ID_PAIS START WITH 1 INCREMENT BY 1;
--INSERCION EN PAISES
INSERT INTO PAISES(ID_PAIS, NOMBRE,ID_REGION) VALUES (SEQ_ID_PAIS.NEXTVAL,'Uruguay',1);
INSERT INTO PAISES(ID_PAIS, NOMBRE,ID_REGION) VALUES (SEQ_ID_PAIS.NEXTVAL,'Paraguay',1);
INSERT INTO PAISES(ID_PAIS, NOMBRE,ID_REGION) VALUES (SEQ_ID_PAIS.NEXTVAL,'Tailandia',3);
INSERT INTO PAISES(ID_PAIS, NOMBRE,ID_REGION) VALUES (SEQ_ID_PAIS.NEXTVAL,'Nigeria',4);
INSERT INTO PAISES(ID_PAIS, NOMBRE,ID_REGION) VALUES (SEQ_ID_PAIS.NEXTVAL,'Francia',2);
INSERT INTO PAISES(ID_PAIS, NOMBRE,ID_REGION) VALUES (SEQ_ID_PAIS.NEXTVAL,'Australia',5);



CREATE SEQUENCE SEQ_ID_UBICACION START WITH 1 INCREMENT BY 1;
--INSERCION EN UBICACIONES
INSERT INTO UBICACIONES(ID_UBICACION, CALLE, CODIGO_POSTAL, CIUDAD, PROVINCIA, ID_PAIS) 
VALUES (SEQ_ID_UBICACION.NEXTVAL, 'Saturio Rios c/ Tte. Martinez', '2300','Fernando de la Mora', 'Central',2);

INSERT INTO UBICACIONES(ID_UBICACION, CALLE, CODIGO_POSTAL, CIUDAD, PROVINCIA, ID_PAIS) 
VALUES (SEQ_ID_UBICACION.NEXTVAL, 'Rca. Argentina 234', '001107','Asuncion', 'Asuncion',2);

INSERT INTO UBICACIONES(ID_UBICACION, CALLE, CODIGO_POSTAL, CIUDAD, PROVINCIA, ID_PAIS) 
VALUES (SEQ_ID_UBICACION.NEXTVAL, 'Carlos Reyles c/ Jose L. Terra', '11100','Montevideo', 'Montevideo',1);

INSERT INTO UBICACIONES(ID_UBICACION, CALLE, CODIGO_POSTAL, CIUDAD, PROVINCIA, ID_PAIS) 
VALUES (SEQ_ID_UBICACION.NEXTVAL, 'Av. Jose Pedro Varela c/ Madreselva', '11100','Montevideo', 'Montevideo',1);

INSERT INTO UBICACIONES(ID_UBICACION, CALLE, CODIGO_POSTAL, CIUDAD, PROVINCIA, ID_PAIS) 
VALUES (SEQ_ID_UBICACION.NEXTVAL, 'Lloyd Ave', '5000','Adelaida', 'Adelaida',6);


CREATE SEQUENCE SEQ_ID_TRABAJO START WITH 1 INCREMENT BY 1;
--INSERCION EN TRABAJOS
INSERT INTO TRABAJOS (ID_TRABAJO, TITULO, SALARIO_MIN, SALARIO_MAX)
VALUES (SEQ_ID_TRABAJO.NEXTVAL,'Vendedor',219283,6192839);

INSERT INTO TRABAJOS (ID_TRABAJO, TITULO, SALARIO_MIN, SALARIO_MAX)
VALUES (SEQ_ID_TRABAJO.NEXTVAL,'Contador',2192839,5390839);

INSERT INTO TRABAJOS (ID_TRABAJO, TITULO, SALARIO_MIN, SALARIO_MAX)
VALUES (SEQ_ID_TRABAJO.NEXTVAL,'Recepcionista',2192839,4863289);

INSERT INTO TRABAJOS (ID_TRABAJO, TITULO, SALARIO_MIN, SALARIO_MAX)
VALUES (SEQ_ID_TRABAJO.NEXTVAL,'Director Departamento',4192839,7863289);

INSERT INTO TRABAJOS (ID_TRABAJO, TITULO, SALARIO_MIN, SALARIO_MAX)
VALUES (SEQ_ID_TRABAJO.NEXTVAL,'Supervisor',3192839,5863289);

INSERT INTO TRABAJOS (ID_TRABAJO, TITULO, SALARIO_MIN, SALARIO_MAX)
VALUES (SEQ_ID_TRABAJO.NEXTVAL,'Analista',4192839,5863289);


--null no es una cadena de caracteres... colocar asi mismo


CREATE SEQUENCE SEQ_ID_DEPARTAMENTO START WITH 1 INCREMENT BY 1;
--INSERCION EN DEPARTAMENTOS
INSERT INTO DEPARTAMENTOS(ID_DEPARTAMENTO,NOMBRE_DEPARTAMENTO,ID_MANAGER,ID_UBICACION)
VALUES(SEQ_ID_DEPARTAMENTO.NEXTVAL,'Ventas',NULL,1);

INSERT INTO DEPARTAMENTOS(ID_DEPARTAMENTO,NOMBRE_DEPARTAMENTO,ID_MANAGER,ID_UBICACION)
VALUES(SEQ_ID_DEPARTAMENTO.NEXTVAL,'Contabilidad',NULL,1);

INSERT INTO DEPARTAMENTOS(ID_DEPARTAMENTO,NOMBRE_DEPARTAMENTO,ID_MANAGER,ID_UBICACION)
VALUES(SEQ_ID_DEPARTAMENTO.NEXTVAL,'Atencion al cliente',NULL,1);

INSERT INTO DEPARTAMENTOS(ID_DEPARTAMENTO,NOMBRE_DEPARTAMENTO,ID_MANAGER,ID_UBICACION)
VALUES(SEQ_ID_DEPARTAMENTO.NEXTVAL,'Informatica',NULL,1);

INSERT INTO DEPARTAMENTOS(ID_DEPARTAMENTO,NOMBRE_DEPARTAMENTO,ID_MANAGER,ID_UBICACION)
VALUES(SEQ_ID_DEPARTAMENTO.NEXTVAL,'Recursos Humanos',NULL,1);


 alter session set NLS_DATE_FORMAT= 'DD/MM/YYYY';
 
CREATE SEQUENCE SEQ_ID_EMPLEADO START WITH 1 INCREMENT BY 1;
--INSERCION EN EMPLEADOS
INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Lida', 'Gonzalez','lidasilvi@email.com','0982313001','01/12/2005',4,7000000,0,1,NULL);

INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Jose', 'Martinez','josema@email.com','098188401','10/05/2008',1,4000000,100000,1,1);

INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Alfredo', 'Martinez','alfrema@email.com','0982903001','28/01/2009',5,5000000,0,1,1);

INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Stella', 'Barrios','stellamaris@email.com','0987023001','06/09/2012',1,4000000,100000,1,1);

INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Cinthia', 'Soto','cinthia_so@email.com','098407686111','09/05/2015',1,3000000,0,3,1);

INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Blas', 'Riveros','riveros@email.com','09140476109','10/12/2006',4,6000000,0,2,NULL);

INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Alexandra', 'Cantero','ale_cantero@email.com','0992123400','01/08/2008',4,7000000,0,3,NULL);

INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Lily', 'Chen','juehe_chen@email.com','0978811002','20/03/2005',4,6000000,0,4,NULL);

INSERT INTO EMPLEADOS(ID_EMPLEADO,NOMBRE,APELLIDO,EMAIL,TELEFONO,FECHA_CONTRATACION,ID_TRABAJO,SALARIO,COMISION,ID_DEPARTAMENTO,ID_MANAGER)
VALUES(SEQ_ID_EMPLEADO.NEXTVAL,'Rodolfo', 'Ricciardi','ro_ricciardi@email.com','0981774607','09/01/2008',4,7000000,0,5,NULL);


--INSERCION DE MANAGER EN DEPARTAMENTO
-- VENTAS
UPDATE DEPARTAMENTOS SET ID_MANAGER='1' WHERE(ID_DEPARTAMENTO=1);

--CONTABILIDAD
UPDATE DEPARTAMENTOS SET ID_MANAGER='6' WHERE(ID_DEPARTAMENTO=2);


--ATENCION AL CLIENTE
UPDATE DEPARTAMENTOS SET ID_MANAGER='7' WHERE(ID_DEPARTAMENTO=3);

--INFORMATICA
UPDATE DEPARTAMENTOS SET ID_MANAGER='8' WHERE(ID_DEPARTAMENTO=4);

--RECURSOS HUMANOS
UPDATE DEPARTAMENTOS SET ID_MANAGER='9' WHERE(ID_DEPARTAMENTO=5);




/*SI UN EMPLEADO CAMBIA DE TIPO DE TRABAJO O DEPARTAMENTO, EL CAMBIO SE REGISTRA EN HISTORIAL*/
CREATE OR REPLACE TRIGGER TR_HIST_TRABAJO
AFTER UPDATE OF ID_TRABAJO, ID_DEPARTAMENTO ON EMPLEADOS
FOR EACH ROW 
BEGIN
	INSERT INTO HISTORIAL_TRABAJOS (ID_HISTORIAL,ID_EMPLEADO,FECHA_INICIO,FECHA_FIN,ID_TRABAJO,ID_DEPARTAMENTO)
	VALUES(SEQ_ID_HISTORIAL.NEXTVAL,:OLD.ID_EMPLEADO,:OLD.FECHA_CONTRATACION,SYSDATE,:OLD.ID_TRABAJO, :OLD.ID_DEPARTAMENTO); 
END TR_HIST_TRABAJO;
/


-- CAMBIO DE DEPARTAMENTO O TRABAJO A UN EMPLEADO ACTIVARA EL TRIGGER

--CAMBIO DE DEPARTAMENTO, SE VUELVE DIRECTOR
UPDATE EMPLEADOS SET ID_DEPARTAMENTO=5, FECHA_CONTRATACION=SYSDATE WHERE(ID_EMPLEADO=8);

--CAMBIO DE EMPLEO, MISMO DEPARTAMENTO
UPDATE EMPLEADOS SET ID_TRABAJO=5, FECHA_CONTRATACION=SYSDATE WHERE(ID_EMPLEADO=4);
UPDATE EMPLEADOS SET ID_TRABAJO=1, FECHA_CONTRATACION=SYSDATE WHERE(ID_EMPLEADO=3);

--CAMBIO DE EMPLEO, MISMO DEPARTAMENTO, DEJA DE SER DIRECTOR Y TIENE NUEVO DIRECTOR
UPDATE EMPLEADOS SET ID_TRABAJO=3, ID_MANAGER=8, SALARIO=3000000, FECHA_CONTRATACION=SYSDATE WHERE(ID_EMPLEADO=9);


/* 5 Crear una vista llamada “Vista_Empleados” que nos muestra por cada empleado (id_empleado,
Nombres + Apellidos, descripción del Trabajo actual, Nombres + Apellidos del Jefe, el
Estado/Provincia/Dpto donde trabaja y a qué región pertenece).*/

CREATE OR REPLACE VIEW VISTA_EMPLEADOS 
	(ID_EMPLEADO, NOMBRE, TRABAJO, DEPARTAMENTO_EMPRESA, JEFE, CIUDAD, DEPARTAMENTO, PAIS, REGION)
AS 
	SELECT 
		empleado.ID_EMPLEADO,
		empleado.NOMBRE ||' '|| empleado.APELLIDO,
		trabajo.TITULO,
		departamento.NOMBRE_DEPARTAMENTO,
		jefe.NOMBRE ||' '|| jefe.APELLIDO,
		ubicacion.CIUDAD,
		ubicacion.PROVINCIA,
		pais.NOMBRE,
		region.NOMBRE
	FROM 
		EMPLEADOS empleado LEFT JOIN EMPLEADOS jefe ON empleado.ID_MANAGER = jefe.ID_EMPLEADO
		JOIN DEPARTAMENTOS departamento ON empleado.ID_DEPARTAMENTO = departamento.ID_DEPARTAMENTO
		JOIN TRABAJOS trabajo ON empleado.ID_TRABAJO=trabajo.ID_TRABAJO 
		JOIN UBICACIONES ubicacion ON ubicacion.ID_UBICACION=departamento.ID_UBICACION
		JOIN PAISES pais ON ubicacion.ID_PAIS = pais.ID_PAIS
		JOIN REGIONES region ON pais.ID_REGION = region.ID_REGION
	ORDER BY empleado.ID_EMPLEADO ASC;


SELECT * FROM VISTA_EMPLEADOS;

/* 6. Realice una consulta que nos muestre por cada registro del Historial de Trabajo: el id_empleado,
Nombres + Apellidos del Empleado, Fecha de inicio de contratación, Fecha de fin de contratación, Nombre
del Departamento, Nombre del Puesto o Cargo del Trabajo */

CREATE OR REPLACE VIEW VISTA_HISTORIAL
	(ID_EMPLEADO, NOMBRE, INICIO_CONTRATACION, FIN_CONTRATACION, DEPARTAMENTO, PUESTO)
AS
	SELECT
		empleado.ID_EMPLEADO,
		empleado.NOMBRE ||' '|| empleado.APELLIDO,
		historial_trabajo.FECHA_INICIO,
		historial_trabajo.FECHA_FIN,
		departamento.NOMBRE_DEPARTAMENTO,
		trabajo.TITULO
	FROM 
		EMPLEADOS empleado JOIN HISTORIAL_TRABAJOS historial_trabajo ON empleado.ID_EMPLEADO=historial_trabajo.ID_EMPLEADO
		JOIN DEPARTAMENTOS departamento ON departamento.ID_DEPARTAMENTO=historial_trabajo.ID_DEPARTAMENTO
		JOIN TRABAJOS trabajo ON trabajo.ID_TRABAJO=historial_trabajo.ID_TRABAJO
	ORDER BY empleado.ID_EMPLEADO; 


SELECT * FROM VISTA_HISTORIAL;


set serveroutput on format wrapped;
begin
    DBMS_OUTPUT.put_line('PARA EL 5 Y EL 6 SE CREARON VISTAS...');
end;
/

disconnect alfa;









